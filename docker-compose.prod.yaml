version: '3.8'

services:
  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: customer-tracker-backend-prod
    restart: always
    environment:
      - DATABASE_URL=sqlite:///app/data/customer_tracker.db
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE_HOURS=${JWT_EXPIRE_HOURS:-24}
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=3000
      - RUST_LOG=${RUST_LOG:-warn}
      - CORS_ORIGIN=${CORS_ORIGIN:-https://your-domain.com}
    volumes:
      - backend_data:/app/data
    networks:
      - customer-tracker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL:-/api}
        - VITE_TOKEN_STORAGE_KEY=${VITE_TOKEN_STORAGE_KEY:-customer_tracker_token}
    container_name: customer-tracker-frontend-prod
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - customer-tracker-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'

  # Nginx 反向代理 (生产环境)
  nginx:
    image: nginx:alpine
    container_name: customer-tracker-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - customer-tracker-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# 持久化存储
volumes:
  backend_data:
    driver: local

# 网络配置
networks:
  customer-tracker-network:
    driver: bridge